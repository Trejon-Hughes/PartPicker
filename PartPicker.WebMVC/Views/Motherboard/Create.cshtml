@model PartPicker.Models.MotherboardModels.MotherboardCreate

@{
    ViewBag.Title = "Create - Motherboards";
}

<h2>Create Motherboard</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MotherboardModel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MotherboardModel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MotherboardModel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MotherboardFormFactor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.MotherboardFormFactor, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MotherboardFormFactor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Socket, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Socket, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Socket, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Chipset, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Chipset, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Chipset, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.USBPorts, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.USBPorts, 5, 40, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
            @Html.ValidationMessageFor(model => model.USBPorts, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RAMSlots, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RAMSlots, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RAMSlots, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RAMType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.RAMType, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RAMType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaxMemorySpeed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.MaxMemorySpeed, 5, 40, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
            @Html.ValidationMessageFor(model => model.MaxMemorySpeed, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaxMemorySize, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaxMemorySize, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaxMemorySize, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VideoConnectors, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.VideoConnectors, 5, 40, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
            @Html.ValidationMessageFor(model => model.VideoConnectors, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PCIeSlots, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.PCIeSlots, 5, 40, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
            @Html.ValidationMessageFor(model => model.PCIeSlots, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SataPorts, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.SataPorts, 5, 40, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
            @Html.ValidationMessageFor(model => model.SataPorts, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.M2NVMeSupport, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.M2NVMeSupport)
                @Html.ValidationMessageFor(model => model.M2NVMeSupport, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.M2NVMeSpecs, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.M2NVMeSpecs, 5, 40, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
            @Html.ValidationMessageFor(model => model.M2NVMeSpecs, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.InbuiltWifi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.InbuiltWifi)
                @Html.ValidationMessageFor(model => model.InbuiltWifi, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RGBHeader, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.RGBHeader)
                @Html.ValidationMessageFor(model => model.RGBHeader, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OtherFeatures, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.OtherFeatures, 5,40, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
            @Html.ValidationMessageFor(model => model.OtherFeatures, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
